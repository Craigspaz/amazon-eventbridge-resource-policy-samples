AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: >
    Resource policy for destination event bus in AWS Account 11111111111 in ap-southeast-1

Parameters:
  EventBusName:
    Description: Event bus receiving cross-Region events
    Type: String
    Default: SecurityEventBus

  Source1EventBusArn:
    Description: Event bus ARN of source 1 
    Type: String

  Source2EventBusArn:
    Description: Event bus ARN of source 2 
    Type: String

  Source3EventBusArn:
    Description: Event bus ARN of source 3 
    Type: String

Resources:

  CustomEventBus: 
    Type: AWS::Events::EventBus
    Properties: 
        Name: !Ref EventBusName

        
  # This IAM role allows EventBridge to assume the permissions necessary to send events 
  # from the source event buses to the destination event bus.
  SourceToDestinationEventBusRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - events.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:   
        - PolicyName: PutEventsOnDestinationEventBus
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'events:PutEvents'
                Resource: 
                  - !GetAtt CustomEventBus.Arn

  # # Rules for source event buses. Create one for each new account and or region
  # SecurityAuditRule111111111111:
  #   Type: AWS::Events::Rule
  #   Properties:
  #     Name: SecurityAuditRule
  #     Description: Audit rule for the Secuirty team in Singapore
  #     EventBusName: !Ref Source1EventBusArn # ARN of the default event bus in account 111111111111
  #     EventPattern:
  #       source:
  #         - aws.cloudtrail
  #       detail-type:
  #         - AWS API Call via CloudTrail
  #       detail:
  #         eventSource:
  #           - cloudtrail.amazonaws.com
  #         eventName:
  #           - ConsoleLogin
  #           - StopLogging
  #           - CreateNetworkAclEntry
  #           - CreateRoute
  #           - AuthorizeSecurityGroupEgress
  #           - AuthorizeSecurityGroupIngress
  #           - RevokeSecurityGroupEgress
  #           - RevokeSecurityGroupIngress
  #           - ApplySecurityGroupsToLoadBalancer
  #           - SetSecurityGroups
  #           - AuthorizeDBSecurityGroupIngress
  #           - CreateDBSecurityGroup
  #           - DeleteDBSecurityGroup
  #           - RevokeDBSecurityGroupIngress
  #     State: ENABLED
  #     Targets: 
  #       - Id: SendEventToSecurityEventBus
  #         Arn: !GetAtt CustomEventBus.Arn
  #         RoleArn: !GetAtt SourceToDestinationEventBusRole.Arn

  SecurityAuditRule222222222222:
    Type: AWS::Events::Rule
    Properties:
      Name: SecurityAuditRule
      Description: Audit rule for the Secuirty team in Singapore
      EventBusName: !Ref Source2EventBusArn # ARN of the default event bus in account 222222222222
      EventPattern:
        source:
          - com.company.sales
      State: ENABLED
      Targets: 
        - Id: SendEventToSecurityEventBus
          Arn: !GetAtt CustomEventBus.Arn
          RoleArn: !GetAtt SourceToDestinationEventBusRole.Arn


  SecurityAuditRule:
    Type: AWS::Events::Rule
    Properties:
      Name: SecurityAuditRule
      Description: Log all events to CloudWatch Logs
      EventBusName: !GetAtt CustomEventBus.Arn
      EventPattern:
        account:
          - !Ref AWS::AccountId
      State: ENABLED
      RoleArn: !GetAtt WriteToSecurityAuditLogGroupRole.Arn
      Targets: 
        - Id: SendEventToSecurityAuditLogGroup
          Arn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${SecurityAuditLogGroup}"
          

  SecurityAuditLogGroup: 
    Type: AWS::Logs::LogGroup
    Properties: 
      RetentionInDays: 3
      LogGroupName: "/aws/events/SecurityAuditLogGroup"

  WriteToSecurityAuditLogGroupRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - events.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: WriteToSecurityAuditLogGroup
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStreams'
                  - 'logs:PutLogEvents'
                Resource: 
                  - !GetAtt SecurityAuditLogGroup.Arn


Outputs:
  EventBus:
    Description: EventBus
    Value: !GetAtt CustomEventBus.Arn

  SourceToDestinationEventBusRole:
    Description: ARN of the role that allows EventBridge to assume permissions to send events to another event bus
    Value: !GetAtt SourceToDestinationEventBusRole.Arn